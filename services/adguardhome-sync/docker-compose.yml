services:
  # Make sure you have updated/checked the .env file with the correct variables.
  # All the ${ xx } need to be defined there.
  # Tailscale Sidecar Configuration
  tailscale:
    image: tailscale/tailscale:latest # Image to be used
    container_name: tailscale-${SERVICE} # Name for local container management
    hostname: ${SERVICE} # Name used within your Tailscale environment
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_STATE_DIR=/var/lib/tailscale
      #- TS_SERVE_CONFIG=/config/serve.json # Tailscale Serve configuration to expose the web interface on your local Tailnet - remove this line if not required
      - TS_USERSPACE=false
      - TS_ENABLE_HEALTH_CHECK=true # Enable healthcheck endpoint: "/healthz"
      - TS_LOCAL_ADDR_PORT=127.0.0.1:41234 # The <addr>:<port> for the healthz endpoint
      #- TS_ACCEPT_DNS=true # Uncomment when using MagicDNS
    volumes:
      - ./config:/config # Config folder used to store Tailscale files - you may need to change the path
      - ./ts/state:/var/lib/tailscale # Tailscale requirement - you may need to change the path
    devices:
      - /dev/net/tun:/dev/net/tun # Network configuration for Tailscale to work
    cap_add:
      - net_admin # Tailscale requirement
    #ports:
    #  - 0.0.0.0:${SERVICEPORT}:${SERVICEPORT} # Binding port ${SERVICE}PORT to the local network - may be removed if only exposure to your Tailnet is required
    # If any DNS issues arise, use your preferred DNS provider by uncommenting the config below
    #dns:
    #  - ${DNS_SERVER}
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:41234/healthz"] # Check Tailscale has a Tailnet IP and is operational
      interval: 1m # How often to perform the check
      timeout: 10s # Time to wait for the check to succeed
      retries: 3 # Number of retries before marking as unhealthy
      start_period: 10s # Time to wait before starting health checks
    restart: always

  # ${SERVICE}
  application:
    image: ${IMAGE_URL} # Image to be used
    network_mode: service:tailscale # Sidecar configuration to route ${SERVICE} through Tailscale
    container_name: app-${SERVICE} # Name for local container management
    command: run
    environment:
      - TZ=Europe/Amsterdam
      # Origin AdGuardHome
      - ORIGIN_URL=http://192.168.1.1:3000 #Your origin Adguard Home instance -> change as necessary
      - ORIGIN_USERNAME=username #change as necessary
      - ORIGIN_PASSWORD=password #change as necessary

      # First replication target
      - REPLICA1_URL=http://192.168.1.2 #Your destination Adguard Home instance change as necessary
      - REPLICA1_USERNAME=dbtech #change as necessary
      - REPLICA1_PASSWORD=password #change as necessary

      # Second replication target (optional)
      #- REPLICA2_URL=http://192.168.1.3 #change as necessary
      #- REPLICA2_USERNAME=username #change as necessary
      #- REPLICA2_PASSWORD=password #change as necessary

      # Third replication target (optional)
      #- REPLICA3_URL=http://192.168.1.4 #change as necessary
      #- REPLICA3_USERNAME=username #change as necessary
      #- REPLICA3_PASSWORD=password #change as necessary

      # Options
      - CRON=*/1 * * * * # run every 1 minute
      - RUN_ON_START=true
    depends_on:
      tailscale:
        condition: service_healthy
    restart: always
